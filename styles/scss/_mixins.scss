

@mixin grayscale{
	-webkit-filter: grayscale(100%); 
	-moz-filter: grayscale(100%); 
	-o-filter: grayscale(100%); 
	-ms-filter: grayscale(100%); 
	filter: grayscale(100%);

}

@mixin flex{
	display: -webkit-flex;
	display: -moz-flex;
	display: -o-flex;
	display: -ms-flex;
	display: flex;
}

@mixin inline-flex{
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -o-inline-flex;
	display: -ms-inline-flex;
	display: inline-flex;
}

@mixin flex-wrap{
	-webkit-flex-wrap: wrap;
	-moz-flex-wrap: wrap;
	-o-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}

@mixin space-between{
	-webkit-justify-content: space-between;
	-moz-justify-content: space-between;
	-o-justify-content: space-between;
	-ms-justify-content: space-between;
	justify-content: space-between;
}

@mixin align-space-between{
	-webkit-align-content: space-between;
	-moz-align-content: space-between;
	-o-align-content: space-between;
	-ms-align-content: space-between;
	align-content: space-between;
}

@mixin space-around{
	-webkit-justify-content: space-around;
	-moz-justify-content: space-around;
	-o-justify-content: space-around;
	-ms-justify-content: space-around;
	justify-content: space-around;
}

@mixin justify-center{
	-webkit-justify-content: center;
	-moz-justify-content: center;
	-o-justify-content: center;
	-ms-justify-content: center;
	justify-content: center;
}

@mixin justify-flexend{
	-webkit-justify-content: flex-end;
	-moz-justify-content: flex-end;
	-o-justify-content: flex-end;
	-ms-justify-content: flex-end;
	justify-content: flex-end;
}

@mixin justify-flexstart{
	-webkit-justify-content: flex-start;
	-moz-justify-content: flex-start;
	-o-justify-content: flex-start;
	-ms-justify-content: flex-start;
	justify-content: flex-start;
}

@mixin align-flexend{
	-webkit-align-items: flex-end;
	-moz-align-items: flex-end;
	-o-align-items: flex-end;
	-ms-align-items: flex-end;
	align-items: flex-end;
}

@mixin align-flexstart{
	-webkit-align-items: flex-start;
	-moz-align-items: flex-start;
	-o-align-items: flex-start;
	-ms-align-items: flex-start;
	align-items: flex-start;
}


@mixin align-center{
	-webkit-align-items: center;
	-moz-align-items: center;
	-o-align-items: center;
	-ms-align-items: center;
	align-items: center;
}

@mixin align-flex-start{
	-webkit-align-items: flex-start;
	-moz-align-items: flex-start;
	-o-align-items: flex-start;
	-ms-align-items: flex-start;
	align-items: flex-start;
}

@mixin row-reverse{
	-webkit-flex-direction: row-reverse;
	-mozf-lex-direction: row-reverse;
	-o-flex-direction: row-reverse;
	-ms-flex-direction: row-reverse;
	flex-direction: row-reverse;
}

@mixin justify-center{
	-webkit-justify-content: center;
	-moz-justify-content: center;
	-o-justify-content: center;
	-ms-justify-content: center;
	justify-content: center;
}

@mixin justifyy-flex-end{
	-webkit-justify-content: flex-end;
	-moz-justify-content: flex-end;
	-o-justify-content: flex-end;
	-ms-justify-content: flex-end;
	justify-content: flex-end;
}

@mixin direction-column{
	-webkit-flex-direction: column;
	-moz-flex-direction: column;
	-o-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}


@mixin liner-gradient($direction, $top-color, $bottom-color){
	background: -webkit-linear-gradient($direction, $top-color, $bottom-color);
	background: -moz-linear-gradient($direction, $top-color, $bottom-color);
	background: -ms-linear-gradient($direction, $top-color, $bottom-color);
	background: -o-linear-gradient($direction, $top-color, $bottom-color);
	background: linear-gradient($direction, $top-color, $bottom-color);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00000000', endColorstr='#00000000',GradientType=0 );
}

@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin radius($radius){
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
}


@mixin placeholder($color){
	&::-webkit-input-placeholder{color: $color;}
	&::-webkit-input-placeholder{color: $color;}
	&::-moz-placeholder{color: $color;}
	&:-ms-input-placeholder{color: $color;}
	&:-moz-placeholder{color: $color;}
}


@mixin rotate($degree){
	-webkit-transform:rotate($degree);
	-moz-transform:rotate($degree);
	-ms-transform:rotate($degree);
	-o-transform:rotate($degree);
	transform:rotate($degree);
}

@mixin transform($transform) {
  -webkit-transform: $transform;
     -moz-transform: $transform;
      -ms-transform: $transform;
       -o-transform: $transform;
          transform: $transform;
}

@mixin scale($scale){
	-webkit-transform:scale($scale);
	-moz-transform:scale($scale);
	-ms-transform:scale($scale);
	-o-transform:scale($scale);
	transform:scale($scale);
}

@mixin translate($x-position, $y-position){
	-webkit-transform:translate($x-position, $y-position);
	-moz-transform:translate($x-position, $y-position);
	-ms-transform:translate($x-position, $y-position);
	-o-transform:translate($x-position, $y-position);
	transform:translate($x-position, $y-position);
}

@mixin translate-x($x-position){
	-webkit-transform:translateX($x-position);
	-moz-transform:translateX($x-position);
	-ms-transform:translateX($x-position);
	-o-transform:translateX($x-position);
	transform:translateX($x-position);
}

@mixin translate-y($y-position){
	-webkit-transform:translateY($y-position);
	-moz-transform:translateY($y-position);
	-ms-transform:translateY($y-position);
	-o-transform:translateY($y-position);
	transform:translateY($y-position);
}


@mixin translate3d($x-value, $y-value, $z-value){
	-webkit-transform: translate3d($x-value, $y-value, $z-value);
	-moz-transform: translate3d($x-value, $y-value, $z-value);
	-ms-transform: translate3d($x-value, $y-value, $z-value);
	-o-transform: translate3d($x-value, $y-value, $z-value);
	transform: translate3d($x-value, $y-value, $z-value);
}


@mixin calc($property, $expression){
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: -moz-calc(#{$expression});
	#{$property}: -ms-calc(#{$expression});
	#{$property}: calc(#{$expression})

 }

 @mixin box-shadow($left, $middle, $top, $blur, $color, $inset: false) {
	@if $inset {
		-webkit-box-shadow:inset $left $middle $top $blur $color;
		-moz-box-shadow:inset $left $middle $top $blur $color;
		-ms-box-shadow:inset $left $middle $top $blur $color;
		-o-box-shadow:inset $left $middle $top $blur $color;
		box-shadow:inset $left $middle $top $blur $color;
	} @else {
		-webkit-box-shadow: $left $middle $top $blur $color;
		-moz-box-shadow: $left $middle $top $blur $color;
		-ms-box-shadow: $left $middle $top $blur $color;
		-o-box-shadow: $left $middle $top $blur $color;
		box-shadow: $left $middle $top $blur $color;
	}
}

/** background image **/


$imgUrl:'../img';


@mixin background-image($imgName) {
    background-image: url('#{$imgUrl}/#{$imgName}');
} 

@mixin cursor($imgName) {
    cursor:url('#{$imgUrl}/#{$imgName}'), auto;
}

/** responsive css **/

@mixin breakpoint($type, $value){
	@if type_of($type) == string{
		@media only screen and (#{$type}-width: $value){
			@content;
		}
	}@else{
		@media only screen and (min-width: $type) and (max-width: $value){
			@content;
		}
	}
}




